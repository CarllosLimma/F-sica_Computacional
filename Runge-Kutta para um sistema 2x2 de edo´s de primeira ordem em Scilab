/*
Carlos Eduardo da Silva Lima
Método de Runge-Kutta para um sistema 2x2 de EDO de primeira ordens
Data: 29/03/2021
*/
// Apresentação
disp('Método de Runge-Kutta para um sistema de edo´s de primeira orem 2x2')
// Edo´s
function [y1] = funct1(t,x,y)
    y1 = -4*x + 3*y + 6;
endfunction
function [y2] = funct2(t,x,y)
    y2 = -2.4*x + 1.6*y + 3.6;
endfunction
// Entre com os ados via teclado
t0 = input("Entre com o valor de t0: ");
x0 = input("Entre com o valor de x0: ");
y0 = input("Entre com o valor de y0: ");
N  = input("Entre com o numero de interações N: ");
h  = input("Entre com o passo h: ");
// Condições iniciais
t1 = t0;
x1 = x0;
x2 = y0;
for i = 0:0.1:N
   k11 = h*funct1(t1, x1, x2);
   k12 = h*funct2(t1, x1, x2);
   k21 = h*funct1(t1 + (h/2), x1 + (k11/2), x2 + (k12/2));
   k22 = h*funct2(t1 + (h/2), x1 + (k11/2), x2 + (k12/2));
   k31 = h*funct1(t1 + (h/2), x1 + (k21/2), x2 + (k22/2));
   k32 = h*funct2(t1 + (h/2), x1 + (k21/2), x2 + (k22/2));
   k41 = h*funct1(t1 + h, x1 + k31, x2 + k32);
   k42 = h*funct2(t1 + h, x1 + k31, x2 + k32);
   x1 = x1 + ((k11 + 2*k21 + 2*k31 + k41)/6);
   x2 = x2 + ((k12 + 2*k22 + 2*k32 + k42)/6);
   t1 = t1 + h;
   printf("t = %f || x1 = %f || x2 = %f\n", t1, x1,x2);
   plot(t1,x1,'-*', t1, x2, '-x')
   xtitle("Gráfico");
   xgrid(0.05);
end
